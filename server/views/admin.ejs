<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"> 
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> 
    <link rel="stylesheet" type="text/css" href="/css/style.css" >
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script> <!-- Chart.js -->

</head>
<body>
    <%- include('includes/header') %>

    <div class="sidebar">
        <a href="#dashboard">Dashboard</a>
        <a href="#listings">Apartments Management</a>
        <a href="#users">Users Management</a>
    </div>

    <div class="main-content">
        <section id="dashboard">
            <h2>Dashboard</h2>
            <div id="chartContainer">
                <h3>Listings by City</h3>
                <canvas id="listingsChart"></canvas>
            </div>
        </section>
        <section>
            <h3>Apartment Counts by Price Range</h3>
            <canvas id="priceRangeChart"></canvas>
          </section>
          
        <section id="listings">
            <h2>Apartments Management</h2>
        
            <table class="listings-table">
                <thead>
                    <tr>
                        <th>Listing Name</th>
                        <th>Location</th>
                        <th>Price per Night</th>
                        <th>Max Guests</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="listingsTableBody">
                    <% for (let apartment of apartmentList) { %>
                        <tr>
                            <td><%=apartment.name%></td>
                            <td><%=apartment.location.city%> ,<%=apartment.location.country%></td>
                            <td><%=apartment.price%></td>
                            <td><%=apartment.maxGuests%></td>
                            <td><form method="POST" action="/api/apartments/delete/<%=apartment.id%>" >
                                <button type="submit">delete</button>
                            </form></td>
                        </tr>
                        <%} %>
                    </tbody>
                </table>
                <br>
        </section>
        <br>
        <section id="users">
            <h2>Users Management</h2>
            <table class="listings-table">
                <thead>
                    <tr>
                        <th>username</th>
                        <th>email</th>
                        <th>full name</th>
                        <th>is host</th>
                        <th>is admin</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="listingsTableBody">
                    <% for (let user of usersList) { %>
                        <tr>
                            <td><%=user.username%></td>
                            <td> <%=user.email%></td>
                            <td><%=user.firstName%> <%=user.lastName%></td>
                            <td><%=user.isHost%></td>
                            <td><%=user.isAdmin%></td>
                            <td><form method="POST" action="/api/users/delete/<%=user.id%>" >
                                <button type="submit">delete</button>
                            </form></td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </section>
        </div>
        <%- include('includes/footer') %>
    </body>
    <script>
        // Fetch data from the database and populate listings table
        $(document).ready(function () {
            fetchListingsByCity();
        });


        function fetchListingsByCity() {
            $.ajax({
                url: '/api/apartments/listings-by-city', // New endpoint for listings count by city
                method: 'GET',
                success: function (data) {
                    let cities = [];
                    let counts = [];
                    data.forEach(function (item) {
                        cities.push(item._id);
                        counts.push(item.count);
                    });

                    const ctx = document.getElementById('listingsChart').getContext('2d');
                    new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: cities,
                            datasets: [{
                                label: '# of Listings',
                                data: counts,
                                backgroundColor: 'rgba(0, 162, 255, 0.5)',
                                borderColor: 'rgba(0, 162, 255, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                },
                error: function (error) {
                    console.error('Error fetching listings by city:', error);
                }
            });
        }

        function confirmDelete(id) {
            if (confirm("Are you sure you want to delete this listing?")) {
                $.ajax({
                    url: `/api/apartments/${id}`,
                    method: 'DELETE',
                    success: function () {
                        alert('Listing deleted successfully');
                        fetchListings();
                    },
                    error: function (error) {
                        console.error('Error deleting listing:', error);
                    }
                });
            }
        }

        function openAddListingModal() {
            // Logic to open a modal for adding a new listing can be implemented here
            alert('Add Listing functionality to be implemented');
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        async function renderPriceRangeChart() {
          try {
            const response = await fetch('/api/apartments/priceRangeData');
            const data = await response.json();
            console.log("Fetched Data:", data); // Log data from the API
      
            // Define the labels for each price range
            const labels = ['$200-$300', '$300-$400', '$400-$500', '$500-$600', '$600-$700', '$700-$800', '$800-$900', '$900-$1000'];
            
            // Initialize counts array with 0s for each range
            const counts = new Array(labels.length).fill(0);
      
            // Map the fetched data to the correct index in the counts array
            data.forEach(item => {
              const price = item._id;
              const count = item.count;
      
              if (price >= 200 && price < 300) counts[0] += count;
              else if (price >= 300 && price < 400) counts[1] += count;
              else if (price >= 400 && price < 500) counts[2] += count;
              else if (price >= 500 && price < 600) counts[3] += count;
              else if (price >= 600 && price < 700) counts[4] += count;
              else if (price >= 700 && price < 800) counts[5] += count;
              else if (price >= 800 && price < 900) counts[6] += count;
              else if (price >= 900 && price <= 1000) counts[7] += count;
            });
      
            console.log("Labels:", labels);  // Log labels to ensure they are correct
            console.log("Counts:", counts);  // Log counts to check data accuracy
      
            const ctx = document.getElementById('priceRangeChart').getContext('2d');
            new Chart(ctx, {
              type: 'bar',
              data: {
                labels: labels,
                datasets: [{
                  label: 'Count of Apartments',
                  data: counts,
                  backgroundColor: 'rgba(75, 192, 192, 0.2)',
                  borderColor: 'rgba(75, 192, 192, 1)',
                  borderWidth: 1
                }]
              },
              options: {
                responsive: true,
                scales: {
                  y: {
                    beginAtZero: true,
                    title: {
                      display: true,
                      text: 'Number of Apartments'
                    }
                  },
                  x: {
                    title: {
                      display: true,
                      text: 'Price Ranges ($)'
                    }
                  }
                }
              }
            });
          } catch (error) {
            console.error('Error fetching price range data:', error);
          }
        }
      
        document.addEventListener('DOMContentLoaded', renderPriceRangeChart);
      </script>
      
</body>
</html>
